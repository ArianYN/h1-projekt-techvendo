@page "/profileviewer/{UserId}"
@using Npgsql;

<div class="grid-container">
    <div class="column1">
        <h1 id="profileName">@CurrentUser.FirstName @CurrentUser.LastName</h1>

        <hr id="nameUnderline" />

        <div id="descriptionBox">
            <p>@CurrentUser.Description</p>
        </div>

        <hr id="descriptionUnderline" />

        <div id="profilePictureContainer">
            <img src="/testprofilepicture.png" id="profilePicture" />
        </div>

        <h1 id="infoTitle">INFO</h1>
        <p id="infoText">Joined: @CurrentUser.Joined Location: @CurrentUser.Location</p>

        <h1 id="sellingTitle">SELLING</h1>
        <div id="selling">
            <br />

            @foreach (var product in productList)
            {
                if (sellingCardsLimit <= 2) //Makes sure it cant show more than 4 items
                {
                    sellingCardsLimit++;
                    <SellingCards SellingProduct="product"></SellingCards>
                    <p></p>
                    if (sellingCardsLimit == 3)
                    {
                        <button id="seeMoreButton">
                            <p>See More</p>
                        </button>
                    }
                }
                else
                {
                    break;
                }
            }
            <br />
           
        </div>
    </div>


    <div class="column2">

        <button id="chatButton">
            <p>CHAT</p>
        </button>

        <button id="reportButton">
            <p>REPORT</p>
        </button>

        <h1 id="repTitle">REPUTATION</h1>

        <div>
                <div class="star-rating">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <span style="@(i <= CurrentUser.Reputation ? "color: gold;" : "color: #ccc;")" class="star">&#9733;</span>
                    }
                </div>
        </div>
    </div>
</div>

<body id="pageBody">
</body>


@code {
    [Parameter]
    public string UserId { get; set; }
    private string primaryKeyColumn;

    private int sellingCardsLimit = 0;

    UserClasses.UserProfiles CurrentUser = new UserClasses.UserProfiles();

    private string connectionString = "Host=ep-purple-star-a20n8auz.eu-central-1.aws.neon.tech;Port=5432;Username=techvendo69;Password=qVyZgOJ36HtK;Database=TechVendo;SslMode=Require;";

    private NpgsqlConnection connection;

    public List<ProductClassLibrary.ProductClass> productList = new List<ProductClassLibrary.ProductClass>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        connection = new NpgsqlConnection(connectionString);

        try

        {
            connection.Open();

            string SelectSQL = $"SELECT * FROM userprofiles WHERE id = {UserId}";
            using (NpgsqlCommand command = new NpgsqlCommand(SelectSQL, connection))
            {
                using (NpgsqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        CurrentUser.FirstName = reader["firstname"].ToString();
                        CurrentUser.LastName = reader["lastname"].ToString();
                        CurrentUser.Description = reader["description"].ToString();
                        CurrentUser.Joined = reader["joined"].ToString();
                        CurrentUser.Location = reader["location"].ToString();
                        CurrentUser.ProfileId = (int)reader["id"];
                        CurrentUser.Reputation = (int)reader["reputation"];


                    }
                }
            }
            SelectSQL = $"SELECT * FROM products WHERE seller_id = {CurrentUser.ProfileId};";
            using (NpgsqlCommand command = new NpgsqlCommand(SelectSQL, connection))
            {
                using (NpgsqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        ProductClassLibrary.ProductClass product = new ProductClassLibrary.ProductClass
                            {
                                Price = (int)reader["price"],
                                EANNumber = reader["ean_number"].ToString(),
                                Brand = reader["brand"].ToString(),
                                Model = reader["model"].ToString(),
                                Series = reader["series"].ToString(),
                                ProductID = (int)reader["product_id"]

                            };
                        productList.Add(product);
                    }
                }
            }
            DateTime datetimeValue = DateTime.Parse(CurrentUser.Joined);
            CurrentUser.Joined = datetimeValue.ToString("dd-MM-yyyy");
        }
        catch (Exception)
        {
          
        }
    }
}
